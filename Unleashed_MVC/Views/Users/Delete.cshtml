@model DAL.Models.User

@{
    ViewData["Title"] = "Delete User";
}

<div class="container mt-4">
    <h1 class="mb-3 text-center text-danger">Delete User Account</h1>
    <hr class="mb-4" />

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-7">
            <div class="card shadow-lg border-0 rounded-lg mt-5">
                <div class="card-header bg-danger text-white text-center py-3">
                    <h4 class="mb-0"><i class="bi bi-exclamation-triangle-fill me-2"></i> Confirm Deletion</h4>
                </div>
                <div class="card-body p-4">
                    <h3 class="text-center mb-4 text-dark">Are you sure you want to delete this user? This action cannot be undone.</h3>

                    <dl class="row mb-0">
                        @* Added mb-0 to remove default bottom margin from dl *@

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.IsUserEnabled)
                        </dt>
                        <dd class="col-sm-8">
                            @* Check if IsEnabled is true, display a green 'Enabled' badge, else a red 'Disabled' badge *@
                            @if (Model.IsUserEnabled.GetValueOrDefault(false))
                            {
                                <span class="badge bg-success">Enabled</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Disabled</span>
                            }
                        </dd>

                        @* UserGoogleId might not always be present, and it's less critical for a delete confirmation *
                           You can uncomment if you still want to show it.
                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserGoogleId)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserGoogleId)
                        </dd>
                        *@

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserUsername)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserUsername)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserFullname)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserFullname)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserEmail)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserEmail)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserPhone)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserPhone)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserBirthdate)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserBirthdate)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserAddress)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserAddress)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserImage)
                        </dt>
                        <dd class="col-sm-8">
                            @if (!string.IsNullOrEmpty(Model.UserImage))
                            {
                                <img src="@Model.UserImage" alt="User Image" class="img-thumbnail rounded-circle" style="width: 60px; height: 60px; object-fit: cover;" />
                            }
                            else
                            {
                                <span class="text-muted fst-italic">No Image</span>
                            }
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserCurrentPaymentMethod)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserCurrentPaymentMethod)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserCreatedAt)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserCreatedAt)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.UserUpdatedAt)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.UserUpdatedAt)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.Gender)
                        </dt>
                        <dd class="col-sm-8">
                            @(Model.Gender)
                        </dd>

                        <dt class="col-sm-4 text-primary">
                            @Html.DisplayNameFor(model => model.Role)
                        </dt>
                        <dd class="col-sm-8">
                            <span class="badge bg-info text-dark">@Html.DisplayFor(model => model.Role.RoleName)</span>
                        </dd>
                    </dl>
                </div>
                <div class="card-footer bg-light border-top text-center py-3">
                    <form asp-action="Delete" method="post" class="d-inline-block">
                        <input type="hidden" name="username" value="@Model.UserUsername" />
                        <button type="submit" class="btn btn-danger btn-lg me-2">
                            <i class="bi bi-trash-fill me-1"></i> Delete
                        </button>
                    </form>
                    <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                        <i class="bi bi-arrow-left me-1"></i> Cancel
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>