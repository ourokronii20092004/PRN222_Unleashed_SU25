@using DAL.DTOs.UserDTOs
@model IEnumerable<UserDetailDTO>

@{
    ViewData["Title"] = "Account Management";
}

<style>
    /* Custom styles for table layout and readability */
    .table-fixed-header th,
    .table-fixed-header td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        padding: 0.75rem 0.5rem; /* Slightly less padding horizontally for tight columns */
        vertical-align: middle; /* Center content vertically */
    }

    /* Specific column widths for better visual balance */
    .table-fixed-header .col-status { width: 80px; text-align: center; } /* Centered status */
    .table-fixed-header .col-username { width: 120px; }
    .table-fixed-header .col-fullname { width: 180px; }
    .table-fixed-header .col-email { width: 220px; }
    .table-fixed-header .col-image { width: 70px; text-align: center; } /* Adjusted image width */
    .table-fixed-header .col-date { width: 150px; } /* Slightly reduced date width */
    .table-fixed-header .col-gender { width: 90px; } /* Slightly reduced gender width */
    .table-fixed-header .col-role { width: 110px; } /* Slightly reduced role width */
    .table-fixed-header .col-actions { width: 160px; text-align: center; } /* Adjusted actions width */

    .img-thumbnail.rounded-circle {
        border: 1px solid #dee2e6;
        box-shadow: 0 0 5px rgba(0,0,0,0.05); /* Subtle shadow for images */
    }

    /* Custom badge styles for better contrast */
    .badge-status-enabled {
        background-color: #28a745; /* Bootstrap success green */
        color: white;
        padding: 0.4em 0.6em;
        border-radius: 0.3em;
        font-weight: 500;
    }
    .badge-status-disabled {
        background-color: #dc3545; /* Bootstrap danger red */
        color: white;
        padding: 0.4em 0.6em;
        border-radius: 0.3em;
        font-weight: 500;
    }
</style>

<div class="container mt-5"> 
    <h1 class="mb-3 text-center text-primary">Account Management</h1>

    <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-4 gap-3"> 
        <a asp-action="Create" class="btn btn-success btn-lg flex-grow-1 flex-md-grow-0 d-flex align-items-center justify-content-center">
            <i class="bi bi-person-plus-fill me-2"></i> Create New Account
        </a>
        <form method="get" class="d-flex w-50 w-md-50">
            <input type="text" name="SearchString" value="@ViewData["SearchString"]"
                   class="form-control form-control-lg me-2" placeholder="Search by Full Name..." aria-label="Search accounts" />
            <button type="submit" class="btn btn-outline-primary btn-lg">
                <i class="bi bi-search"></i>
            </button>
            <a href="/Users/Index" class="btn btn-outline-secondary btn-lg ms-2">
                <i class="bi bi-arrow-counterclockwise"></i>
            </a>
        </form>
    </div>

    <div class="table-responsive shadow-sm rounded-3 overflow-hidden"> 
        <table class="table table-striped table-hover table-fixed-header mb-0"> 
            <thead class="table-dark">
                <tr>
                    <th class="col-status">@Html.DisplayNameFor(item => item.IsUserEnabled)</th>
                    <th class="col-username">@Html.DisplayNameFor(item => item.UserUsername)</th>
                    <th class="col-fullname">@Html.DisplayNameFor(item => item.UserFullname)</th>
                    <th class="col-email">@Html.DisplayNameFor(item => item.UserEmail)</th>
                    <th class="col-image">@Html.DisplayNameFor(item => item.UserImage)</th>
                    <th class="col-date">@Html.DisplayNameFor(item => item.UserCreatedAt)</th>
                    <th class="col-date">@Html.DisplayNameFor(item => item.UserUpdatedAt)</th>
                    <th class="col-gender">@Html.DisplayNameFor(item => item.Gender)</th>
                    <th class="col-role">@Html.DisplayNameFor(item => item.Role)</th>
                    <th class="col-actions">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @if (item.IsUserEnabled.GetValueOrDefault(false))
                            {
                                <span class="badge badge-status-enabled">Enabled</span>
                            }
                            else
                            {
                                <span class="badge badge-status-disabled">Disabled</span>
                            }
                        </td>
                        <td class="col-username">@Html.DisplayFor(modelItem => item.UserUsername)</td>
                        <td class="col-fullname">@Html.DisplayFor(modelItem => item.UserFullname)</td>
                        <td class="col-email">@Html.DisplayFor(modelItem => item.UserEmail)</td>
                        <td class="col-image">
                            @if (!string.IsNullOrEmpty(item.UserImage))
                            {
                                <img src="@item.UserImage" alt="User Image" class="img-thumbnail rounded-circle" style="width: 40px; height: 40px; object-fit: cover;" />
                            }
                            else
                            {
                                <i class="bi bi-person-circle text-muted" style="font-size: 2rem;"></i>
                            }
                        </td>
                        <td class="col-date">@item.UserCreatedAt?.ToString("yyyy-MM-dd HH:mm")</td>
                        <td class="col-date">@item.UserUpdatedAt?.ToString("yyyy-MM-dd HH:mm")</td>
                        <td class="col-gender">
                            @if (item.Gender.HasValue)
                            {
                                @(item.Gender.Value ? "Female" : "Male")
                            }
                            else
                            {
                                <span class="text-muted fst-italic">N/A</span> 
                            }
                        </td>
                        <td class="col-role">@Html.DisplayFor(modelItem => item.Role.RoleName)</td>
                        <td class="col-actions">
                            <div class="btn-group btn-group-sm" role="group" aria-label="Account Actions">
                                <a asp-action="Edit" asp-route-username="@item.UserUsername" class="btn btn-outline-primary" title="Edit">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <a asp-action="Details" asp-route-username="@item.UserUsername" class="btn btn-outline-info" title="Details">
                                    <i class="bi bi-info-circle"></i>
                                </a>
                                <a asp-action="Delete" asp-route-username="@item.UserUsername" class="btn btn-outline-danger" title="Delete">
                                        <i class="bi bi-trash"></i>
                                </a>        
                            </div>
                        </td>
                    </tr>
                }
                @if (!Model.Any()) 
                {
                    <tr>
                        <td colspan="10" class="text-center text-muted py-4">No accounts found. Try adjusting your search.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @{
        int CurrentPage = (int)ViewData["CurrentPage"];
        int Pages = (int)ViewData["Pages"];
    }
    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link"
                   asp-area="" asp-controller="Notifications" asp-action="Index"
                   asp-route-pageIndex="@(CurrentPage - 1)"
                   asp-route-SearchString="@ViewData["SearchString"]"
                   aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = Math.Max(1, CurrentPage - 2); i <= Math.Min(Pages, CurrentPage + 2); i++)
            {
                <li class="page-item @(i == CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-area="" asp-controller="Notifications" asp-action="Index"
                       asp-route-pageIndex="@(i)"
                       asp-route-SearchString="@ViewData["SearchString"]">
                        @i
                        @if (i == CurrentPage)
                        {
                            <span class="visually-hidden">(current)</span>
                        }
                    </a>
                </li>
            }
            <li class="page-item @(CurrentPage == Pages ? "disabled" : "")">
                <a class="page-link"
                   asp-area="" asp-controller="Notifications" asp-action="Index"
                   asp-route-pageIndex="@(CurrentPage + 1)"
                   asp-route-SearchString="@ViewData["SearchString"]"
                   aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>