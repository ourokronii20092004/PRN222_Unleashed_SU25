@model DAL.DTOs.BrandDTOs.BrandCreateDTO

@{
    ViewData["Title"] = "Create New Brand";
}

<style>
    .image-placeholder {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 160px;
        width: 100%;
        background-color: #f8f9fa;
        border: 1px dashed #ced4da;
        border-radius: .25rem;
        color: #6c757d;
        font-size: 0.9rem;
    }
</style>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-7">
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0"><i class="bi bi-plus-circle-fill"></i> @ViewData["Title"]</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" enctype="multipart/form-data">
                        <div asp-validation-summary="All" class="alert alert-danger" role="alert" style="@(ViewData.ModelState.IsValid ? "display: none;" : "")"></div>

                        <div class="mb-3">
                            <label asp-for="BrandName" class="form-label fw-bold"></label>
                            <input asp-for="BrandName" class="form-control" placeholder="Enter brand name" />
                            <span asp-validation-for="BrandName" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="BrandDescription" class="form-label fw-bold"></label>
                            <textarea asp-for="BrandDescription" class="form-control" rows="3" placeholder="Enter brand description"></textarea>
                            <span asp-validation-for="BrandDescription" class="text-danger small"></span>
                        </div>

                        <hr />
                        <h5 class="mb-3">Brand Image</h5>
                        <div class="mb-3">
                            <label asp-for="BrandImageFile" class="form-label fw-bold"></label>
                            <input asp-for="BrandImageFile" id="imageUpload" class="form-control" type="file" accept="image/png, image/jpeg, image/gif" />
                            <span asp-validation-for="BrandImageFile" class="text-danger small"></span>
                        </div>

                        <div class="mb-3 text-center">
                            <label class="form-label fw-bold">Image Preview</label>
                            <div class="image-placeholder">
                                <img id="imagePreview" src="" alt="Image Preview" class="img-fluid" style="max-height: 150px; display: none;" />
                                <span id="imagePreviewText">No image selected</span>
                            </div>
                        </div>

                        <hr />
                        <h5 class="mb-3">Other Details</h5>
                        <div class="mb-3">
                            <label asp-for="BrandWebsiteUrl" class="form-label fw-bold"></label>
                            <input asp-for="BrandWebsiteUrl" class="form-control" type="url" placeholder="https://example.com" />
                            <span asp-validation-for="BrandWebsiteUrl" class="text-danger small"></span>
                        </div>

                        <hr />
                        <div class="d-flex justify-content-end">
                            <a asp-action="Index" class="btn btn-outline-secondary me-2">Back to List</a>
                            <button type="submit" class="btn btn-success">Create Brand</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const imageUploadInput = document.getElementById('imageUpload');
            const imagePreview = document.getElementById('imagePreview');
            const imagePreviewText = document.getElementById('imagePreviewText');
            const form = document.querySelector('form');

            if (imageUploadInput) {
                imageUploadInput.addEventListener('change', function(e) {
                    if (e.target.files && e.target.files[0]) {
                        const reader = new FileReader();
                        reader.onload = function(event) {
                            imagePreview.src = event.target.result;
                            imagePreview.style.display = 'block';
                            imagePreviewText.style.display = 'none';
                        }
                        reader.readAsDataURL(e.target.files[0]);
                    }
                });
            }

            if (form) {
                form.addEventListener('submit', function(e) {
                    if ($(form).valid()) {
                        form.querySelectorAll('button[type="submit"]').forEach(function(button) {
                            button.disabled = true;
                            button.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Creating...';
                        });
                    }
                });
            }
        });
    </script>
}