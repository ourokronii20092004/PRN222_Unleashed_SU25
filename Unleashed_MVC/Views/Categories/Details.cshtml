@model DAL.Models.Category

@{
    ViewData["Title"] = "Category Details";
}

<style>
    .image-placeholder {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 80px;
        width: 100%;
        background-color: #f8f9fa;
        border: 1px dashed #ced4da;
        border-radius: .25rem;
        color: #6c757d;
        font-size: 0.9rem;
    }
</style>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-7">
            <div class="card shadow-sm">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0"><i class="bi bi-eye-fill"></i> @ViewData["Title"]</h4>
                </div>
                <div class="card-body">

                    <div class="row align-items-center mb-4">
                        <div class="col-12 col-md-4 text-center">
                            @if (!string.IsNullOrEmpty(Model.CategoryImageUrl))
                            {
                                <img src="@Model.CategoryImageUrl" alt="Category Image" class="img-fluid rounded shadow-sm" style="max-height: 80px;"
                                     onerror="this.style.display='none'; document.getElementById('placeholder-div').style.display='flex';" />
                                <div id="placeholder-div" style="display: none;"><div class="image-placeholder">No Image</div></div>
                            }
                            else
                            {
                                <div class="image-placeholder">No Image</div>
                            }
                        </div>
                        <div class="col-12 col-md-8">
                            <h2 class="mb-0">@Html.DisplayFor(model => model.CategoryName)</h2>
                        </div>
                    </div>

                    <dl class="row">
                        <dt class="col-sm-4 fw-bold">Description</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.CategoryDescription)</dd>

                        <dt class="col-sm-4 fw-bold">Created On</dt>
                        <dd class="col-sm-8">@(Model.CategoryCreatedAt.HasValue? Model.CategoryCreatedAt.Value.ToString("F") : "N/A")</dd>

                        <dt class="col-sm-4 fw-bold">Last Updated</dt>
                        <dd class="col-sm-8">@(Model.CategoryUpdatedAt.HasValue? Model.CategoryUpdatedAt.Value.ToString("F") : "N/A")</dd>
                    </dl>
                </div>
                <div class="card-footer bg-light text-end">
                    <a asp-action="Edit" asp-route-id="@Model?.CategoryId" class="btn btn-primary me-2">
                        <i class="bi bi-pencil-square"></i> Edit
                    </a>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left-circle"></i> Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>