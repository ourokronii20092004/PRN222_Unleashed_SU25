@page
@using Microsoft.AspNetCore.Html
@model Unleashed_RP.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Our Products";
}

@functions {
    // This C# helper method is great for quickly rendering the rating stars.
    public static IHtmlContent RenderRatingStars(double? rating)
    {
        if (!rating.HasValue || rating == 0)
        {
            return new HtmlString("<div class='rating-stars text-muted small' style='height: 1.2rem;'>No ratings yet</div>");
        }

        var sb = new System.Text.StringBuilder();
        sb.Append($"<div class='rating-stars' title='{rating.Value:0.0} stars'>");
        double roundedRating = Math.Round(rating.Value * 2) / 2;

        for (int i = 1; i <= 5; i++)
        {
            if (i <= roundedRating) sb.Append("<i class='bi bi-star-fill'></i>");
            else if (i - 0.5 == roundedRating) sb.Append("<i class='bi bi-star-half'></i>");
            else sb.Append("<i class='bi bi-star'></i>");
        }
        sb.Append($"<span class='rating-text ms-2'>{rating.Value:0.0}</span>");
        sb.Append("</div>");
        return new HtmlString(sb.ToString());
    }
}

<div class="container my-5">
    <!-- Breadcrumb and Title -->
    <div class="row mb-4">
        <div class="col">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Products</li>
                </ol>
            </nav>
            <h1 class="fw-bold">Explore Our Products</h1>
        </div>
    </div>

    <div class="row">
        <!-- ==== PRODUCT GRID & MAIN CONTENT (Full Width) ==== -->
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <!-- Search Bar -->
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <form method="get" class="input-group input-group-lg">
                                <input type="text" name="query" class="form-control"
                                       placeholder="Search products by name, category..."
                                       value="@Model.Query">
                                <button class="btn btn-primary" type="submit">
                                    <i class="bi bi-search"></i> Search
                                </button>
                            </form>
                        </div>
                    </div>

                    <!-- Toolbar: Sort, PageSize, Results Count -->
                    <div class="toolbar card shadow-sm mb-4">
                        <div class="d-flex flex-wrap justify-content-between align-items-center">
                            <p class="text-muted mb-0">
                                Showing @((Model.CurrentPage - 1) * Model.pageSize + 1)-@Math.Min(Model.CurrentPage * Model.pageSize, Model.TotalCount) of @Model.TotalCount
                            </p>
                            <div class="d-flex align-items-center gap-3">
                                <div class="d-flex align-items-center gap-2">
                                    <label for="sortSelector" class="form-label mb-0 small">Sort by:</label>
                                    <select class="form-select form-select-sm" id="sortSelector">
                                        <option selected>Best Match</option>
                                        <option>Price: Low to High</option>
                                        <option>Price: High to Low</option>
                                        <option>Highest Rated</option>
                                    </select>
                                </div>
                                <div class="d-flex align-items-center gap-2">
                                    <label for="pageSizeSelector" class="form-label mb-0 small">Show:</label>
                                    <select class="form-select form-select-sm" id="pageSizeSelector">
                                        <option value="12" selected="@(Model.pageSize == 12)">12</option>
                                        <option value="24" selected="@(Model.pageSize == 24)">24</option>
                                        <option value="48" selected="@(Model.pageSize == 48)">48</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Product Grid -->
                    @if (Model.Product.Any())
                    {
                        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4">
                            @foreach (var item in Model.Product)
                            {
                                <div class="col">
                                    <div class="card h-100 product-card">
                                        <!-- Product Image -->
                                        <div class="product-image-container">
                                            @{
                                                var imageUrl = item.Variations?.Select(v => v.ProductVariationImage).FirstOrDefault(v => !string.IsNullOrEmpty(v)) ?? "/images/placeholder-image.png";
                                            }
                                            <a asp-page="./Details" asp-route-id="@item.ProductId">
                                                <img src="@imageUrl" class="card-img-top" alt="@item.ProductName" onerror="this.src='/images/placeholder-image.png';" />
                                            </a>
                                            @if (item.SaleValue > 0)
                                            {
                                                <span class="sale-badge">-@item.SaleValue%</span>
                                            }
                                            <div class="quick-actions">
                                                <button class="btn btn-light quick-action-btn" title="Add to Wishlist" onclick="event.stopPropagation(); addToWishlist('@item.ProductId')"><i class="bi bi-heart"></i></button>
                                                <button class="btn btn-light quick-action-btn" title="Add to Cart" onclick="event.stopPropagation(); addToCart('@item.ProductId')"><i class="bi bi-cart-plus"></i></button>
                                            </div>
                                        </div>

                                        <!-- Product Body -->
                                        <div class="card-body d-flex flex-column">
                                            <h5 class="product-title"><a asp-page="./Details" asp-route-id="@item.ProductId">@item.ProductName</a></h5>
                                            <div class="mb-2">@RenderRatingStars(item.AverageRating)</div>
                                            <div class="mt-auto d-flex justify-content-between align-items-center">
                                                @{
                                                    var firstVariation = item.Variations?.FirstOrDefault();
                                                    var originalPrice = firstVariation?.ProductPrice ?? 0;
                                                    var salePrice = item.SaleValue > 0 ? originalPrice * (100 - item.SaleValue) / 100 : originalPrice;
                                                }
                                                <div class="product-price">
                                                    @if (item.SaleValue > 0)
                                                    {
                                                        <span class="text-danger">@salePrice?.ToString("N0") ₫</span>
                                                        <small class="text-muted text-decoration-line-through ms-2">@originalPrice.ToString("N0") ₫</small>
                                                    }
                                                    else
                                                    {
                                                        <span>@originalPrice.ToString("N0") ₫</span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- ==== PAGINATION (Restored) ==== -->
                        <nav class="mt-5">
                            <ul class="pagination justify-content-center flex-wrap">
                                <!-- Previous Button -->
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link rounded-start-pill px-3 py-2"
                                       asp-page="./Index"
                                       asp-route-pageIndex="@(Model.CurrentPage - 1)"
                                       asp-route-query="@Model.Query"
                                       asp-route-pageSize="@Model.pageSize">
                                        <i class="bi bi-chevron-left me-1"></i> Previous
                                    </a>
                                </li>

                                <!-- First Page -->
                                @if (Model.CurrentPage > 3)
                                {
                                    <li class="page-item d-none d-sm-block">
                                        <a class="page-link"
                                           asp-page="./Index"
                                           asp-route-pageIndex="1"
                                           asp-route-query="@Model.Query"
                                           asp-route-pageSize="@Model.pageSize">1</a>
                                    </li>
                                    @if (Model.CurrentPage > 4)
                                    {
                                        <li class="page-item disabled d-none d-sm-block">
                                            <span class="page-link">...</span>
                                        </li>
                                    }
                                }

                                <!-- Page Numbers -->
                                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "") d-none d-sm-block">
                                        <a class="page-link"
                                           asp-page="./Index"
                                           asp-route-pageIndex="@i"
                                           asp-route-query="@Model.Query"
                                           asp-route-pageSize="@Model.pageSize">@i</a>
                                    </li>
                                }

                                <!-- Last Page -->
                                @if (Model.CurrentPage < Model.TotalPages - 2)
                                {
                                    @if (Model.CurrentPage < Model.TotalPages - 3)
                                    {
                                        <li class="page-item disabled d-none d-sm-block">
                                            <span class="page-link">...</span>
                                        </li>
                                    }
                                    <li class="page-item d-none d-sm-block">
                                        <a class="page-link"
                                           asp-page="./Index"
                                           asp-route-pageIndex="@Model.TotalPages"
                                           asp-route-query="@Model.Query"
                                           asp-route-pageSize="@Model.pageSize">@Model.TotalPages</a>
                                    </li>
                                }

                                <!-- Current Page (Mobile) -->
                                <li class="page-item active d-block d-sm-none">
                                    <span class="page-link">
                                        @Model.CurrentPage / @Model.TotalPages
                                    </span>
                                </li>

                                <!-- Next Button -->
                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link rounded-end-pill px-3 py-2"
                                       asp-page="./Index"
                                       asp-route-pageIndex="@(Model.CurrentPage + 1)"
                                       asp-route-query="@Model.Query"
                                       asp-route-pageSize="@Model.pageSize">
                                        Next <i class="bi bi-chevron-right ms-1"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    }
                    else
                    {
                        <div class="text-center py-5 w-100">
                            <img src="/images/no-products.svg" alt="No products" style="max-width: 250px;" class="mb-4">
                            <h4 class="text-muted">No Products Found</h4>
                            <p>We couldn't find any products matching your search.</p>
                            <a asp-page="./Index" class="btn btn-primary mt-3">Clear Search</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('pageSizeSelector')?.addEventListener('change', function() {
                updateUrlParam('pageSize', this.value);
            });
            document.getElementById('sortSelector')?.addEventListener('change', function() {
                updateUrlParam('sortBy', this.value);
            });
        });

        function updateUrlParam(key, value) {
            const url = new URL(window.location.href);
            url.searchParams.set(key, value);
            if (key !== 'pageIndex') url.searchParams.set('pageIndex', '1'); // Reset to first page on filter change
            window.location.href = url.toString();
        }
        function addToCart(productId) { console.log(`Add to Cart: ${productId}`); }
        function addToWishlist(productId) { console.log(`Add to Wishlist: ${productId}`); }
    </script>
}

<style>
    /* General */
    .breadcrumb-item a {
        text-decoration: none;
    }

    /* Toolbar */
    .toolbar {
        padding: 0.75rem 1.25rem;
        border-radius: 0.5rem;
        border: none;
        background-color: #f8f9fa;
    }

    /* Product Card */
    .product-card {
        border: 1px solid #eee;
        border-radius: 0.75rem;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        transition: all 0.3s ease;
        overflow: hidden;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            border-color: var(--bs-primary);
        }

    .product-image-container {
        position: relative;
        overflow: hidden;
    }

        .product-image-container .card-img-top {
            aspect-ratio: 1 / 1;
            object-fit: cover;
        }

    .sale-badge {
        position: absolute;
        top: 1rem;
        left: 1rem;
        background-color: var(--bs-danger);
        color: white;
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.3rem 0.6rem;
        border-radius: 0.25rem;
    }

    .quick-actions {
        position: absolute;
        bottom: 1rem;
        right: 1rem;
        display: flex;
        gap: 0.5rem;
        opacity: 0;
        transform: translateY(10px);
        transition: all 0.3s ease;
    }

    .product-card:hover .quick-actions {
        opacity: 1;
        transform: translateY(0);
    }

    .quick-action-btn {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        font-size: 1rem;
        background-color: rgba(255,255,255,0.9);
        border: 1px solid #ddd;
    }

    .product-title a {
        color: var(--bs-dark);
        text-decoration: none;
        font-weight: 600;
        font-size: 1.05rem;
    }

        .product-title a:hover {
            color: var(--bs-primary);
        }

    .product-price {
        font-size: 1.1rem;
        font-weight: 600;
    }

    /* Rating Stars */
    .rating-stars {
        color: #ffc107;
    }

    .rating-text {
        color: var(--bs-secondary);
        font-size: 0.85rem;
        font-weight: 500;
    }

    /* Pagination */
    .page-item.active .page-link {
        background-color: var(--bs-primary);
        border-color: var(--bs-primary);
        color: white;
        font-weight: 500;
    }

    .page-link {
        min-width: 40px;
        text-align: center;
        margin: 0 2px;
        border: 1px solid #dee2e6;
        color: var(--bs-primary);
        transition: all 0.2s ease;
    }

    .page-item:not(.active) .page-link:hover {
        background-color: #f8f9fa;
    }

    .page-item.disabled .page-link {
        color: #6c757d;
        pointer-events: none;
        background-color: #f8f9fa;
    }

    .page-link.rounded-start-pill, .page-link.rounded-end-pill {
        border-radius: 50rem !important;
        padding-left: 1rem;
        padding-right: 1rem;
    }
</style>