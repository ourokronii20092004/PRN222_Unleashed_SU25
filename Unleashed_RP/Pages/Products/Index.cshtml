@page
@model Unleashed_RP.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Our Products";
}

<div class="container mt-5">
    <div class="card shadow-sm border-0">
        <div class="card-body p-4">
            <!-- Header with search and create button -->
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-center mb-4">
                <h1 class="fw-bold text-primary mb-3 mb-md-0">Our Products</h1>
                <div class="d-flex gap-2">
                    <a asp-page="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Add Product
                    </a>
                </div>
            </div>

            <!-- Search and filter bar -->
            <div class="row mb-4 g-3">
                <div class="col-md-8">
                    <form method="get" class="input-group">
                        <input type="text" name="query" class="form-control border-end-0"
                               placeholder="Search products by name, category..."
                               value="@Model.Query">
                        <button class="btn btn-primary" type="submit">
                            <i class="bi bi-search"></i> Search
                        </button>
                    </form>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="pageSizeSelector">
                        <option value="12" selected="@(Model.pageSize == 12)">Show 12 per page</option>
                        <option value="24" selected="@(Model.pageSize == 24)">Show 24 per page</option>
                        <option value="48" selected="@(Model.pageSize == 48)">Show 48 per page</option>
                    </select>
                </div>
            </div>

            <!-- Results count -->
            <div class="d-flex justify-content-between align-items-center mb-3">
                <p class="text-muted mb-0">
                    Showing @((Model.CurrentPage - 1) * Model.pageSize + 1)-@Math.Min(Model.CurrentPage * Model.pageSize, Model.TotalCount) 
                    of @Model.TotalCount products
                </p>
            </div>

            <!-- Product Grid -->
            @if (Model.Product.Any())
            {
                <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 g-4">
                    @foreach (var item in Model.Product)
                    {
                        <div class="col">
                            <div class="card h-100 product-card border-0 shadow-sm">
                                <!-- Product Image with clickable overlay -->
                                <div class="position-relative overflow-hidden" style="padding-top: 100%;">
                                    @{
                                        var imageUrl = item.Variations?
                                        .Where(v => !string.IsNullOrEmpty(v.ProductVariationImage))
                                        .Select(v => v.ProductVariationImage)
                                        .FirstOrDefault() ?? "/images/placeholder-image.png";
                                    }
                                    <a asp-page="./Details" asp-route-id="@item.ProductId" class="stretched-link">
                                        <img src="@imageUrl" class="position-absolute top-0 start-0 w-100 h-100 object-fit-cover p-3"
                                             alt="@item.ProductName"
                                             onerror="this.src='/images/placeholder-image.png';" />
                                    </a>
                                    @if (item.SaleValue > 0)
                                    {
                                        <span class="position-absolute top-0 end-0 m-2 badge bg-danger rounded-pill">
                                            -@item.SaleValue%
                                        </span>
                                    }
                                    <div class="quick-actions position-absolute bottom-0 end-0 m-2 d-flex gap-1">
                                        <button class="btn btn-sm btn-light rounded-circle shadow-sm quick-action-btn"
                                                onclick="event.stopPropagation(); addToWishlist('@item.ProductId')">
                                            <i class="bi bi-heart"></i>
                                        </button>
                                        <button class="btn btn-sm btn-light rounded-circle shadow-sm quick-action-btn"
                                                onclick="event.stopPropagation(); addToCart('@item.ProductId')">
                                            <i class="bi bi-cart-plus"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Product Body -->
                                <div class="card-body p-3">
                                    <h5 class="card-title mb-1">
                                        <a asp-page="./Details" asp-route-id="@item.ProductId" class="text-decoration-none text-dark">@item.ProductName</a>
                                    </h5>
                                    <div class="d-flex justify-content-between align-items-center mt-2">
                                        @{
                                            var firstVariation = item.Variations?.FirstOrDefault();
                                            var originalPrice = firstVariation?.ProductPrice ?? 0;
                                            var salePrice = item.SaleValue > 0 ? originalPrice * (100 - item.SaleValue) / 100 : originalPrice;
                                        }
                                        <div>
                                            @if (item.SaleValue > 0)
                                            {
                                                <span class="fw-bold text-danger">@salePrice?.ToString("0,0") ₫</span>
                                                <span class="text-decoration-line-through text-muted small ms-2">@originalPrice.ToString("0,0") ₫</span>
                                            }
                                            else
                                            {
                                                <span class="fw-bold">@originalPrice.ToString("0,0") ₫</span>
                                            }
                                        </div>
                                        <button class="btn btn-sm btn-outline-primary rounded-pill"
                                                onclick="event.stopPropagation(); addToCart('@item.ProductId')">
                                            <i class="bi bi-plus"></i> Add
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
              <!-- Pagination -->
<nav class="mt-5">
    <ul class="pagination justify-content-center flex-wrap">
        <!-- Previous Button -->
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link rounded-start-pill px-3 py-2"
               asp-page="./Index"
               asp-route-pageIndex="@(Model.CurrentPage - 1)"
               asp-route-query="@Model.Query"
               asp-route-pageSize="@Model.pageSize">
                <i class="bi bi-chevron-left me-1"></i> Previous
            </a>
        </li>
        
        <!-- First Page -->
        @if (Model.CurrentPage > 3)
        {
            <li class="page-item d-none d-sm-block">
                <a class="page-link" 
                   asp-page="./Index"
                   asp-route-pageIndex="1"
                   asp-route-query="@Model.Query"
                   asp-route-pageSize="@Model.pageSize">1</a>
            </li>
            @if (Model.CurrentPage > 4)
            {
                <li class="page-item disabled d-none d-sm-block">
                    <span class="page-link">...</span>
                </li>
            }
        }
        
        <!-- Page Numbers -->
        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "") d-none d-sm-block">
                <a class="page-link"
                   asp-page="./Index"
                   asp-route-pageIndex="@i"
                   asp-route-query="@Model.Query"
                   asp-route-pageSize="@Model.pageSize">@i</a>
            </li>
        }
        
        <!-- Last Page -->
        @if (Model.CurrentPage < Model.TotalPages - 2)
        {
            @if (Model.CurrentPage < Model.TotalPages - 3)
            {
                <li class="page-item disabled d-none d-sm-block">
                    <span class="page-link">...</span>
                </li>
            }
            <li class="page-item d-none d-sm-block">
                <a class="page-link" 
                   asp-page="./Index"
                   asp-route-pageIndex="@Model.TotalPages"
                   asp-route-query="@Model.Query"
                   asp-route-pageSize="@Model.pageSize">@Model.TotalPages</a>
            </li>
        }
        
        <!-- Current Page (Mobile) -->
        <li class="page-item active d-block d-sm-none">
            <span class="page-link">
                @Model.CurrentPage / @Model.TotalPages
            </span>
        </li>
        
        <!-- Next Button -->
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link rounded-end-pill px-3 py-2"
               asp-page="./Index"
               asp-route-pageIndex="@(Model.CurrentPage + 1)"
               asp-route-query="@Model.Query"
               asp-route-pageSize="@Model.pageSize">
                Next <i class="bi bi-chevron-right ms-1"></i>
            </a>
        </li>
    </ul>
</nav>
            }
            else
            {
                <div class="text-center py-5">
                    <img src="/images/no-products.svg" alt="No products" style="max-width: 300px;" class="mb-4">
                    <h4 class="text-muted">No products found</h4>
                    <p class="text-muted">Try adjusting your search or filter to find what you're looking for.</p>
                    <a href="?" class="btn btn-primary mt-3">Clear search</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle page size changes
            const pageSizeSelector = document.getElementById('pageSizeSelector');
            if (pageSizeSelector) {
                pageSizeSelector.addEventListener('change', function() {
                    const url = new URL(window.location.href);
                    url.searchParams.set('pageSize', this.value);
                    url.searchParams.set('pageIndex', '1');
                    window.location.href = url.toString();
                });
            }
            
            // Add hover effects to product cards
            const productCards = document.querySelectorAll('.product-card');
            productCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                    this.style.boxShadow = '0 10px 20px rgba(0, 0, 0, 0.15)';
                });
                card.addEventListener('mouseleave', function() {
                    this.style.transform = '';
                    this.style.boxShadow = '';
                });
            });
        });
        
        function addToCart(productId) {
            console.log('Adding to cart:', productId);
            // Implement your cart logic here
        }
        
        function addToWishlist(productId) {
            console.log('Adding to wishlist:', productId);
            // Implement your wishlist logic here
        }
    </script>
}

<style>
    .product-card {
        transition: all 0.3s ease;
        border-radius: 0.5rem;
        overflow: hidden;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
    
    .quick-actions {
        opacity: 0;
        transition: all 0.3s ease;
    }
    
    .product-card:hover .quick-actions {
        opacity: 1;
        transform: translateY(-10px);
    }
    
    .quick-action-btn {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
    }
    
    .quick-action-btn:hover {
        background-color: var(--bs-primary) !important;
        color: white !important;
    }
    
    .page-item.active .page-link {
        background-color: var(--bs-primary);
        border-color: var(--bs-primary);
    }
    
    .page-link {
        color: var(--bs-primary);
        min-width: 40px;
        text-align: center;
    }
    
    .dropdown-menu {
        border: none;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .dropdown-item:active {
        background-color: var(--bs-primary);
    }

    .page-link {
        min-width: 40px;
        text-align: center;
        margin: 0 2px;
        border: 1px solid #dee2e6;
        color: var(--bs-primary);
        transition: all 0.2s ease;
    }

    .page-item.active .page-link {
        background-color: var(--bs-primary);
        border-color: var(--bs-primary);
        color: white;
        font-weight: 500;
    }

    .page-item:not(.active) .page-link:hover {
        background-color: #f8f9fa;
        color: var(--bs-primary-dark);
    }

    .page-item.disabled .page-link {
        color: #6c757d;
        pointer-events: none;
        background-color: #f8f9fa;
    }

    /* Nút Previous và Next */
    .page-link.rounded-start-pill {
        border-top-left-radius: 50rem !important;
        border-bottom-left-radius: 50rem !important;
        padding-left: 1rem;
        padding-right: 1rem;
    }

    .page-link.rounded-end-pill {
        border-top-right-radius: 50rem !important;
        border-bottom-right-radius: 50rem !important;
        padding-left: 1rem;
        padding-right: 1rem;
    }
</style>