@page
@model Unleashed_RP.Pages.Products.IndexModel

<div class="container-fluid product-showcase">
    <!-- Header with search and create button -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-6">Our Products</h1>
        <div>
            <a asp-page="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add To Cart
            </a>
        </div>
    </div>

    <!-- Search form -->
    <form method="get" id="searchForm">
        <div class="input-group search-bar">
            <input type="hidden" name="pageIndex" value="1" />
            <input type="text" name="query" class="form-control form-control-lg"
                   placeholder="Search products by name, category..."
                   value="@Model.Query" />
            <button class="btn btn-primary" type="submit">
                <i class="bi bi-search"></i> Search
            </button>
        </div>
    </form>

    <!-- Display Info and Page Size Selector -->
    <div class="d-flex justify-content-between mt-2">
        <small class="text-muted">
            Showing @((Model.CurrentPage - 1) * Model.pageSize + 1)-@Math.Min(Model.CurrentPage * Model.pageSize, Model.TotalCount)
            of @Model.TotalCount products
        </small>
        <div class="form-group">
            <select class="form-select form-select-sm" id="pageSizeSelector">
                <option value="10" selected="@(Model.pageSize == 10)">10 per page</option>
                <option value="20" selected="@(Model.pageSize == 20)">20 per page</option>
                <option value="50" selected="@(Model.pageSize == 50)">50 per page</option>
            </select>
        </div>
    </div>

    <!-- Product Grid -->
    @if (Model.Product.Any())
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
            @foreach (var item in Model.Product)
            {
                <div class="col">
                    <div class="card h-100 product-card">
                        <!-- Product Image -->
                        @{
                            var imageUrl = item.Variations?
                            .Where(v => !string.IsNullOrEmpty(v.ProductVariationImage))
                            .Select(v => v.ProductVariationImage)
                            .FirstOrDefault() ?? "/images/placeholder-image.png";
                        }

                        <div class="product-image-container">
                            <img src="@imageUrl" class="card-img-top" alt="@item.ProductName"
                                 onerror="this.src='/images/placeholder-image.png';" />
                            @if (item.SaleValue > 0)
                            {
                                <span class="badge bg-danger discount-badge">-@item.SaleValue%</span>
                            }
                            <div class="quick-actions">
                                <button class="btn btn-sm btn-outline-light quick-view"
                                        onclick="location.href='./Details?id=@item.ProductId'">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-light quick-cart">
                                    <i class="bi bi-cart-plus"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Product Body -->
                        <div class="card-body">
                            <h5 class="card-title">@item.ProductName</h5>

                            <!-- Price -->
                            <div class="d-flex justify-content-between align-items-center">
                                @{
                                    var firstVariation = item.Variations?.FirstOrDefault();
                                    var originalPrice = firstVariation?.ProductPrice ?? 0;
                                    var salePrice = item.SaleValue > 0 ? originalPrice * (100 - item.SaleValue) / 100 : originalPrice;
                                }

                                @if (item.SaleValue > 0)
                                {
                                    <div>
                                        <span class="text-danger fw-bold">
                                            @salePrice?.ToString("0,0") ₫
                                        </span>
                                        <span class="text-decoration-line-through text-muted small ms-2">
                                            @originalPrice.ToString("0,0") ₫
                                        </span>
                                    </div>
                                }
                                else
                                {
                                    <span class="fw-bold">@originalPrice.ToString("0,0") ₫</span>
                                }
                                <button class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-cart-plus"></i> Add
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            No products found. Try a different search.
        </div>
    }

    <!-- Pagination -->
    @if (Model.TotalCount > Model.pageSize)
    {
        <div class="d-flex justify-content-center mt-4">
            <form method="get" class="me-3">
                <input type="hidden" name="pageIndex" value="@(Model.CurrentPage - 1)" />
                <input type="hidden" name="pageSize" value="@Model.pageSize" />
                <input type="hidden" name="query" value="@Model.Query" />
                <button type="submit" class="btn btn-primary px-4" @(Model.CurrentPage <= 1 ? "disabled" : "")>
                    <i class="bi bi-arrow-left-circle me-2"></i> Previous
                </button>
            </form>

            <form method="get">
                <input type="hidden" name="pageIndex" value="@(Model.CurrentPage + 1)" />
                <input type="hidden" name="pageSize" value="@Model.pageSize" />
                <input type="hidden" name="query" value="@Model.Query" />
                <button type="submit" class="btn btn-primary px-4" @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")>
                    Next <i class="bi bi-arrow-right-circle ms-2"></i>
                </button>
            </form>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const pageSizeSelector = document.getElementById('pageSizeSelector');

            if (pageSizeSelector) {
                pageSizeSelector.addEventListener('change', function() {
                    const form = document.getElementById('searchForm');
                    const pageSizeInput = document.createElement('input');
                    pageSizeInput.type = 'hidden';
                    pageSizeInput.name = 'pageSize';
                    pageSizeInput.value = this.value;
                    form.appendChild(pageSizeInput);
                    form.submit();
                });
            }
        });
    </script>
}

<style>
    .product-showcase {
        padding: 2rem 0;
    }

    .search-bar {
        max-width: 600px;
        margin: 0 auto;
    }

    .product-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 10px;
        overflow: hidden;
        border: 1px solid #eee;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .product-image-container {
        position: relative;
        height: 200px;
        overflow: hidden;
        background-color: #f8f9fa;
    }

        .product-image-container img {
            object-fit: contain;
            width: 100%;
            height: 100%;
            padding: 1rem;
            transition: transform 0.3s ease;
        }

    .product-card:hover .product-image-container img {
        transform: scale(1.05);
    }

    .discount-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 0.9rem;
        padding: 5px 10px;
        z-index: 1;
    }

    .quick-actions {
        position: absolute;
        bottom: -50px;
        right: 10px;
        transition: bottom 0.3s ease;
        display: flex;
        gap: 5px;
        z-index: 1;
    }

    .product-card:hover .quick-actions {
        bottom: 10px;
    }

    .quick-actions button {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        transition: all 0.2s ease;
    }

        .quick-actions button:hover {
            transform: scale(1.1);
            background-color: rgba(255, 255, 255, 0.2);
        }

    .card-title {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        margin-bottom: 0.75rem;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    .pagination .page-link {
        color: #0d6efd;
    }
</style>